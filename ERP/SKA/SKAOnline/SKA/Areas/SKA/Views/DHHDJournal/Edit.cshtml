@model SKA.Areas.SKA.Models.ViewModels.DHHDJournalViewModel
@using Telerik.Web.Mvc.UI
<script src="@Url.Content("~/Scripts/jquery-1.4.4.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@{
    ViewBag.Title = "Jurnal Daftar Utang Harus Dibayar- Edit";
    Layout = "~/Areas/SKA/Views/Shared/_SkaLayout.cshtml";
}
<div class ="box-head">
<h2>Edit Data Jurnal Daftar Utang Harus Dibayar</h2>
</div>

<div class="box-content">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <table>
            <tr>
                <td>
                    Nomor Voucher
                </td>
                <td>
                    :
                </td>
                <td>
                    @Html.TextBoxFor(model => model.VoucherNumber, new { readOnly = "readonly", style = "width:100px" })
                    @Html.ValidationMessageFor(model => model.VoucherNumber)
                </td>
            </tr>
            <tr>
                <td>
                    Tanggal Transaksi
                </td>
                <td>
                    :
                </td>
                <td>
                    @Html.Telerik().DatePickerFor(model => model.DateVoucher).Name("DateVoucher").Format("dd-MM-yyyy").HtmlAttributes(new { style = "width:140px" })
                    @Html.ValidationMessageFor(model => model.DateVoucher)
                </td>
            </tr>
            <tr>
                <td>
                    Keterangan
                </td>
                <td>
                    :
                </td>
                <td>
                    @Html.TextAreaFor(model => model.Description, new { maxlength = "255", style = "width:250px" })
                    @Html.ValidationMessageFor(model => model.Description)
                </td>
            </tr>
        </table>
    
        @(Html.Telerik().Grid<SKA.Areas.SKA.Models.ViewModels.DHHDJournalDetailViewModel>()
        .Name("Grid")

        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        .ToolBar(commands => commands.Insert().ButtonType(GridButtonType.Text).ImageHtmlAttributes(new { style = "margin-left:0" }))

        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax()
                .Select("_SelectDetail", "DHHDJournal")
                .Insert("_InsertDetail", "DHHDJournal")
                .Update("_UpdateDetail", "DHHDJournal")
                .Delete("_DeleteDetail", "DHHDJournal");
        })
        .Columns(columns =>
        {
            columns.Bound(p => p.AccountCode).Title("Kode Perkiraan").Width(300);
            columns.Bound(p => p.Debet).Format("{0:N}").Width(120);
            columns.Bound(p => p.Kredit).Format("{0:N}").Width(120);
            columns.Bound(p => p.Id).Hidden();
            if (ViewData["VoucherNumber"] == null)
            {
                columns.Command(commands =>
                {
                    commands.Edit().ButtonType(GridButtonType.ImageAndText);
                    commands.Delete().ButtonType(GridButtonType.ImageAndText);
                }).Width(220).Title("");
            }
        }) 
        .ClientEvents(events => 
            {
                events.OnDataBound("Grid_OnDataBound");
                events.OnEdit("onEdit");
                events.OnError("onError");
            }
        )
        .HtmlAttributes(new { style = "height:50%;" })
        .Pageable()
        .Sortable()
        .Filterable()
      )
      <br />
     <table>
        <tr>
            <td>Total Debet</td>
            <td>@Html.Telerik().CurrencyTextBoxFor(model => model.AmountDebet).Name("AmountDebet").EmptyMessage("").CurrencySymbol("Rp. ")</td>
            <td>Total Kredit</td>
            <td>@Html.Telerik().CurrencyTextBoxFor(model => model.AmountKredit).Name("AmountKredit").EmptyMessage("").CurrencySymbol("Rp. ")</td>
            @if (ViewData["VoucherNumber"] != null)
                { 
                    <a class ="t-button" style ="width:100px" href="@Url.Action("Edit", "../VoucherKas/VoucherKas", new { id = ViewData["Id"] , dhhd = ViewData["dhhd"] })">Edit Voucher</a>
                }
        </tr>
    </table>
        <br />
        @*<input class="t-button" style="width: 60px" type="submit" value="Simpan" />*@
        <a class ="t-button" style ="width:60px" href="@Url.Action("Index", "DHHDJournal", null)">
            Batal</a>
    }
</div>

@Html.Hidden("urlCheckKreditDebet", Url.Action("CheckDebetKredit", "DHHDJournal"))
<script type="text/javascript">
    function onError(e) {
        if (e.textStatus == "modelstateerror") {
            alert(e.modelState.AccountCode.errors[0]);
        }
    }

    function onEdit(e) {
        $("#AccountCode").select();
        $("#Debet").hide();
        $("#Kredit").hide();
    }

    function onSelectItem(e) {
        if (e.keyCode == 9 || e.keyCode == 13) {
            var url = $("#urlCheckKreditDebet").val();
            var accountCode = $("#AccountCode").val();
            //alert(accountCode);
            $.post(url,
                    { AccountCode: accountCode },
                    function (data) {
                        if (data == "D") {
                            $("#Debet").show();
                            $("#Kredit").hide();
                            $("#Debet").focus();

                            //get current balance
                            var balance = Math.abs(CountBalance(data));
                            $("#Debet").val(balance);
                            $("#Debet").select();
                            //set new balance status    
                            $("#StatusBalance").val("D");
                        } else {
                            $("#Kredit").show();
                            $("#Debet").hide();
                            $("#Kredit").focus();
                            //get current balance
                            var balance = Math.abs(CountBalance(data));
                            $("#Kredit").val(balance);
                            $("#Kredit").select();
                            //set new balance status
                            $("#StatusBalance").val("K");
                        }
                    });

        }
    }

    //function for count balance from debet and credit.
    function CountBalance(status) {
        var balance = 0;
        var totalDebet = 0;
        var totalKredit = 0;

        $.each($('#Grid').find('tbody tr'), function (idx, row) {
            // check for the row is header or not. Index 0 means header row.
            if (idx >= 0) {
                // get hidden column.
                var debet = $($(row).find('td')[1]).text();
                debet = debet.replace(/,/gi, "");
                var kredit = $($(row).find('td')[2]).text();
                kredit = kredit.replace(/,/gi, "");

                // note: make sure to convert the amount to decimal/float data type.
                if (debet) {
                    totalDebet = totalDebet + parseFloat(debet);
                }
                if (kredit) {
                    totalKredit = totalKredit + parseFloat(kredit);
                }

                balance = totalDebet - totalKredit;



            }
        });

        var oldstatus = $("#StatusBalance").val();

        //clear balance if new status is larger than 0 and the balance will be entry on this event
        if ((status == "D") && (status == oldstatus)) {
            if (balance > 0) {
                balance = 0;
            }
        }
        else if ((status == "D") && (status != oldstatus)) {
            if (balance > 0) {
                balance = 0;
            }
        }
        else if ((status == "K") && (status == oldstatus)) {
            if (balance < 0) {
                balance = 0;
            }
        }
        else if ((status == "K") && (status != oldstatus)) {
            if (balance < 0) {
                balance = 0;
            }
        }

        return balance;
    }


    function Grid_OnDataBound(e) {
        total = 0;
        totalDebet = 0;
        totalKredit = 0;

        $.each($('#Grid').find('tbody tr'), function (idx, row) {
            // check for the row is header or not. Index 0 means header row.
            if (idx >= 0) {
                // get hidden column.
                var debet = $($(row).find('td')[1]).text();
                debet = debet.replace(/,/gi, "");
                var kredit = $($(row).find('td')[2]).text();
                kredit = kredit.replace(/,/gi, "");

                // note: make sure to convert the amount to decimal/float data type.
                if (debet) {
                    totalDebet = totalDebet + parseFloat(debet);
                }
                if (kredit) {
                    totalKredit = totalKredit + parseFloat(kredit);
                }
                total = totalDebet - totalKredit

            }
        });

        var input = $("#AmountDebet").data("tTextBox");
        input.value(totalDebet);
        var input2 = $("#AmountKredit").data("tTextBox");
        input2.value(totalKredit);
    }
</script>